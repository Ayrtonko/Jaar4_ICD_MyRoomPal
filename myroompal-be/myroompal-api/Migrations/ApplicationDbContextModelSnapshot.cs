// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myroompal_api.Data;

#nullable disable

namespace myroompal_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("myroompal_api.Entities.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("LikeDate")
                        .HasColumnType("date");

                    b.Property<Guid>("LikeeUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LikerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LikerUserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("MatchDate")
                        .HasColumnType("date");

                    b.Property<Guid>("MatcheeUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MatcherUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MatcheeUserId");

                    b.HasIndex("MatcherUserId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PaidAmount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Preference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreferenceTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.PreferenceUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreferenceTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PreferenceId");

                    b.HasIndex("UserId");

                    b.ToTable("PreferenceUsers");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.ProfilePreferences", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CleaningHabits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DietaryPreferences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReligiousPreferences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolOrCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SleepingHabits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SmokingHabits")
                        .HasColumnType("bit");

                    b.Property<string>("SocialHabits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ProfilePreferences");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Rent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RentPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.HasIndex("TenantId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.SupportTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorOfTicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorOfTicketId");

                    b.ToTable("SupportTickets", t =>
                        {
                            t.HasCheckConstraint("CK_SupportTicketIssueType", "[IssueType] IN ('Login', 'Payment', 'Account', 'Renting', 'Other')");

                            t.HasCheckConstraint("CK_SupportTicketStatus", "[Status] IN ('New', 'Committed', 'Done')");
                        });
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Auth0Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Users", t =>
                        {
                            t.HasCheckConstraint("CK_RoleNames", "[RoleName] IN ('Tenant', 'Owner', 'Moderator')");

                            t.HasCheckConstraint("CK_UserAccountStatusTypes", "[Status] IN ('Active', 'Banned')");
                        });
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.UserRating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RatedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RatedUserId");

                    b.HasIndex("UserId", "RatedUserId")
                        .IsUnique();

                    b.ToTable("UserRatings");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Like", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.User", "LikerUser")
                        .WithMany("Likes")
                        .HasForeignKey("LikerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LikerUser");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Match", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.User", "MatcheeUser")
                        .WithMany()
                        .HasForeignKey("MatcheeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myroompal_api.Entities.Entities.User", "MatcherUser")
                        .WithMany("Matches")
                        .HasForeignKey("MatcherUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatcheeUser");

                    b.Navigation("MatcherUser");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Payment", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.Rent", "Rent")
                        .WithMany("Payments")
                        .HasForeignKey("RentId");

                    b.Navigation("Rent");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.PreferenceUser", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.Preference", "Preference")
                        .WithMany("PreferencesUsers")
                        .HasForeignKey("PreferenceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("myroompal_api.Entities.Entities.User", "User")
                        .WithMany("PreferencesUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Preference");

                    b.Navigation("User");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Profile", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("myroompal_api.Entities.Entities.Profile", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.ProfilePreferences", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Rent", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.Room", "Room")
                        .WithMany("Rents")
                        .HasForeignKey("RoomId");

                    b.HasOne("myroompal_api.Entities.Entities.User", "User")
                        .WithMany("Rents")
                        .HasForeignKey("UserId");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Room", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.Address", "Address")
                        .WithOne()
                        .HasForeignKey("myroompal_api.Entities.Entities.Room", "AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("myroompal_api.Entities.Entities.User", "Owner")
                        .WithMany("Rooms")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("myroompal_api.Entities.Entities.User", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Address");

                    b.Navigation("Owner");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.SupportTicket", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.User", "CreatorOfTicket")
                        .WithMany("SupportTickets")
                        .HasForeignKey("CreatorOfTicketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatorOfTicket");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.User", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.Address", "Address")
                        .WithMany("Users")
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.UserRating", b =>
                {
                    b.HasOne("myroompal_api.Entities.Entities.User", "RatedUser")
                        .WithMany()
                        .HasForeignKey("RatedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("myroompal_api.Entities.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RatedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Address", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Preference", b =>
                {
                    b.Navigation("PreferencesUsers");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Rent", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.Room", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("myroompal_api.Entities.Entities.User", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("Matches");

                    b.Navigation("PreferencesUsers");

                    b.Navigation("Profile");

                    b.Navigation("Ratings");

                    b.Navigation("Rents");

                    b.Navigation("Rooms");

                    b.Navigation("SupportTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
